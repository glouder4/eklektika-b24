{"version":3,"file":"script.js","sources":["src/page.events.manager.js","src/productcard.applications.editor.js","src/productcard.applications.row.js"],"sourcesContent":["export class PageEventsManager\n{\n\t_settings = {};\n\n\tconstructor(settings)\n\t{\n\t\tthis._settings = settings ? settings : {};\n\t\tthis.eventHandlers = {};\n\t}\n\n\tregisterEventHandler(eventName, eventHandler)\n\t{\n\t\tif (!this.eventHandlers[eventName])\n\t\t\tthis.eventHandlers[eventName] = [];\n\t\tthis.eventHandlers[eventName].push(eventHandler);\n\t\tBX.addCustomEvent(this, eventName, eventHandler);\n\t}\n\n\tfireEvent(eventName, eventParams)\n\t{\n\t\tBX.onCustomEvent(this, eventName, eventParams);\n\t}\n\n\tunregisterEventHandlers(eventName)\n\t{\n\t\tif (this.eventHandlers[eventName])\n\t\t{\n\t\t\tfor (var i = 0; i < this.eventHandlers[eventName].length; i++)\n\t\t\t{\n\t\t\t\tBX.removeCustomEvent(this, eventName, this.eventHandlers[eventName][i]);\n\t\t\t}\n\t\t\tdelete this.eventHandlers[eventName];\n\t\t}\n\t}\n}","import {ajax, Cache, Dom, Event, Loc, Reflection, Runtime, Tag, Text, Type} from 'main.core';\r\nimport {BaseEvent, EventEmitter} from 'main.core.events';\r\nimport {PageEventsManager} from \"./page.events.manager\";\r\nimport {ProductModel} from \"catalog.product-model\";\r\nimport {ProductSelector} from \"catalog.product-selector\";\r\n\r\nimport {Row} from \"./productcard.applications.row\";\r\n\r\nexport class Editor {\r\n\r\n    productSelectionPopupHandler = this.handleProductSelectionPopup.bind(this);\r\n    onDialogSelectProductHandler = this.handleOnDialogSelectProduct.bind(this);\r\n    onBeforeGridRequestHandler = this.handleOnBeforeGridRequest.bind(this);\r\n    onSaveHandler = this.handleOnSave.bind(this);\r\n    onEntityUpdateHandler = this.handleOnEntityUpdate.bind(this);\r\n    onEditorSubmit = this.handleEditorSubmit.bind(this);\r\n\r\n    products = [];\r\n\r\n    cache = new Cache.MemoryCache();\r\n\r\n    constructor(id)\r\n    {\r\n        this.setId(id);\r\n        this.products = [];\r\n    }\r\n\r\n    init(config = {})\r\n    {\r\n        this.setSettings(config);\r\n        this.initProducts();\r\n        this.subscribeDomEvents();\r\n        this.subscribeCustomEvents();\r\n    }\r\n\r\n    getId()\r\n    {\r\n        return this.id;\r\n    }\r\n\r\n    setId(id)\r\n    {\r\n        this.id = id;\r\n    }\r\n\r\n    /* settings tools */\r\n    getSettings()\r\n    {\r\n        return this.settings;\r\n    }\r\n\r\n    setSettings(settings)\r\n    {\r\n        this.settings = settings ? settings : {};\r\n    }\r\n\r\n    getSettingValue(name, defaultValue)\r\n    {\r\n        return this.settings.hasOwnProperty(name) ? this.settings[name] : defaultValue;\r\n    }\r\n\r\n    setSettingValue(name, value)\r\n    {\r\n        this.settings[name] = value;\r\n    }\r\n\r\n    initProducts()\r\n    {\r\n        this.products = [];\r\n        const list = this.getSettingValue('items', []);\r\n\r\n        for (const item of list)\r\n        {\r\n            const fields = {...item.fields};\r\n            console.log(fields);\r\n            this.products.push(new Row(item.rowId, fields, this));\r\n        }\r\n    }\r\n\r\n    subscribeDomEvents()\r\n    {\r\n        this.unsubscribeDomEvents();\r\n        const container = this.getContainer();\r\n\r\n        if (Type.isElementNode(container))\r\n        {\r\n            container.querySelectorAll('[data-role=\"product-list-select-button\"]').forEach((selectButton) => {\r\n                Event.bind(\r\n                    selectButton,\r\n                    'click',\r\n                    this.productSelectionPopupHandler\r\n                );\r\n            });\r\n\r\n            // container.querySelectorAll('[data-role=\"product-list-settings-button\"]').forEach((configButton) => {\r\n            //     Event.bind(\r\n            //         configButton,\r\n            //         'click',\r\n            //         this.showSettingsPopupHandler\r\n            //     );\r\n            // });\r\n        }\r\n    }\r\n\r\n    unsubscribeDomEvents()\r\n    {\r\n        const container = this.getContainer();\r\n\r\n        if (Type.isElementNode(container))\r\n        {\r\n            container.querySelectorAll('[data-role=\"product-list-select-button\"]').forEach((selectButton) => {\r\n                Event.unbind(\r\n                    selectButton,\r\n                    'click',\r\n                    this.productSelectionPopupHandler\r\n                );\r\n            });\r\n\r\n            // container.querySelectorAll('[data-role=\"product-list-add-button\"]').forEach((addButton) => {\r\n            //     Event.unbind(\r\n            //         addButton,\r\n            //         'click',\r\n            //         this.productRowAddHandler\r\n            //     );\r\n            // });\r\n            //\r\n            // container.querySelectorAll('[data-role=\"product-list-settings-button\"]').forEach((configButton) => {\r\n            //     Event.unbind(\r\n            //         configButton,\r\n            //         'click',\r\n            //         this.showSettingsPopupHandler\r\n            //     );\r\n            // });\r\n        }\r\n    }\r\n\r\n    subscribeCustomEvents()\r\n    {\r\n        this.unsubscribeCustomEvents();\r\n        EventEmitter.subscribe('CrmProductSearchDialog_SelectProduct', this.onDialogSelectProductHandler);\r\n        // EventEmitter.subscribe('BX.Crm.EntityEditor:onSave', this.onSaveHandler);\r\n        EventEmitter.subscribe('onEntityUpdate', this.onEntityUpdateHandler);\r\n        // EventEmitter.subscribe('BX.Crm.EntityEditorAjax:onSubmit', this.onEditorSubmit);\r\n        // EventEmitter.subscribe('EntityProductListController:onInnerCancel', this.onInnerCancelHandler);\r\n        EventEmitter.subscribe('Grid::beforeRequest', this.onBeforeGridRequestHandler);\r\n        // EventEmitter.subscribe('Grid::updated', this.onGridUpdatedHandler);\r\n        // EventEmitter.subscribe('Grid::rowMoved', this.onGridRowMovedHandler);\r\n        // EventEmitter.subscribe('BX.Catalog.ProductSelector:onBeforeChange', this.onBeforeProductChangeHandler);\r\n        // EventEmitter.subscribe('BX.Catalog.ProductSelector:onChange', this.onProductChangeHandler);\r\n        // EventEmitter.subscribe('BX.Catalog.ProductSelector:onClear', this.onProductClearHandler);\r\n        // EventEmitter.subscribe('Dropdown::change', this.dropdownChangeHandler);\r\n    }\r\n\r\n    unsubscribeCustomEvents()\r\n    {\r\n        EventEmitter.unsubscribe('CrmProductSearchDialog_SelectProduct', this.onDialogSelectProductHandler);\r\n        // EventEmitter.unsubscribe('BX.Crm.EntityEditor:onSave', this.onSaveHandler);\r\n        EventEmitter.unsubscribe('onEntityUpdate', this.onEntityUpdateHandler);\r\n        // EventEmitter.unsubscribe('BX.Crm.EntityEditorAjax:onSubmit', this.onEditorSubmit);\r\n        // EventEmitter.unsubscribe('EntityProductListController:onInnerCancel', this.onInnerCancelHandler);\r\n        EventEmitter.unsubscribe('Grid::beforeRequest', this.onBeforeGridRequestHandler);\r\n        // EventEmitter.unsubscribe('Grid::updated', this.onGridUpdatedHandler);\r\n        // EventEmitter.unsubscribe('Grid::rowMoved', this.onGridRowMovedHandler);\r\n        // EventEmitter.unsubscribe('BX.Catalog.ProductSelector:onBeforeChange', this.onBeforeProductChangeHandler);\r\n        // EventEmitter.unsubscribe('BX.Catalog.ProductSelector:onChange', this.onProductChangeHandler);\r\n        // EventEmitter.unsubscribe('BX.Catalog.ProductSelector:onClear', this.onProductClearHandler);\r\n        // EventEmitter.unsubscribe('Dropdown::change', this.dropdownChangeHandler);\r\n    }\r\n\r\n    handleOnDialogSelectProduct(event)\r\n    {\r\n        const [productId] = event.getCompatData();\r\n\r\n        if(!this.getRowByProductId(productId)) {\r\n            this.addProductRow(productId);\r\n        }\r\n        // if (this.getProductCount() > 0 || this.products[0]?.getField('ID') <= 0)\r\n        // {\r\n        //     // id = this.addProductRow();\r\n        // }\r\n        // else\r\n        // {\r\n        //     id = this.products[0]?.getField('ID');\r\n        // }\r\n        // this.selectProductInRow(id, productId)\r\n    }\r\n\r\n    getRowByProductId (productId) {\r\n        let result = this.products.filter((elem) => +(elem.getField('PRODUCT_ID')) == +productId);\r\n\r\n        if(result.length > 0) {\r\n            return result[0];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleProductSelectionPopup(event)\r\n    {\r\n        const caller = 'crm_productcard_applications_list';\r\n        const jsEventsManagerId = this.getSettingValue('jsEventsManagerId', '');\r\n\r\n        const popup = new BX.CDialog({\r\n            content_url: '/bitrix/components/bitrix/crm.product_row.list/product_choice_dialog.php?'\r\n                + 'caller=' + caller\r\n                + '&JS_EVENTS_MANAGER_ID=' + BX.util.urlencode(jsEventsManagerId)\r\n                + '&sessid=' + BX.bitrix_sessid(),\r\n            height: Math.max(500, window.innerHeight - 400),\r\n            width: Math.max(800, window.innerWidth - 400),\r\n            draggable: true,\r\n            resizable: true,\r\n            min_height: 500,\r\n            min_width: 800,\r\n            zIndex: 800\r\n        });\r\n\r\n        EventEmitter.subscribeOnce(popup, 'onWindowRegister', BX.defer(() => {\r\n            popup.Get().style.position = 'fixed';\r\n            popup.Get().style.top = (parseInt(popup.Get().style.top) - BX.GetWindowScrollPos().scrollTop) + 'px';\r\n            popup.OVERLAY.style.zIndex = 798;\r\n        }));\r\n\r\n        EventEmitter.subscribeOnce(window, 'EntityProductListController:onInnerCancel', BX.defer(() => {\r\n            popup.Close();\r\n        }));\r\n\r\n        if (!Type.isUndefined(BX.Crm.EntityEvent))\r\n        {\r\n            EventEmitter.subscribeOnce(window, BX.Crm.EntityEvent.names.update, BX.defer(() => {\r\n                requestAnimationFrame(() => {\r\n                    popup.Close()\r\n                }, 0);\r\n            }));\r\n        }\r\n\r\n        popup.Show();\r\n    }\r\n\r\n    getContainer()\r\n    {\r\n        // return this.cache.remember('container', () => {\r\n            return document.getElementById(this.getContainerId());\r\n        // });\r\n    }\r\n\r\n    getContainerId()\r\n    {\r\n        return this.getSettingValue('containerId', '');\r\n    }\r\n\r\n    initPageEventsManager()\r\n    {\r\n        const componentId = this.getSettingValue('componentId');\r\n        this.pageEventsManager = new PageEventsManager({id: componentId});\r\n    }\r\n\r\n    getPageEventsManager()\r\n    {\r\n        if (!this.pageEventsManager)\r\n        {\r\n            this.initPageEventsManager();\r\n        }\r\n\r\n        return this.pageEventsManager;\r\n    }\r\n\r\n    getGridId()\r\n    {\r\n        return this.getSettingValue('gridId', '');\r\n    }\r\n\r\n    getGrid()\r\n    {\r\n        return this.cache.remember('grid', () => {\r\n            const gridId = this.getGridId();\r\n\r\n            if (!Reflection.getClass('BX.Main.gridManager.getInstanceById'))\r\n            {\r\n                throw Error(`Cannot find grid with '${gridId}' id.`)\r\n            }\r\n\r\n            return BX.Main.gridManager.getInstanceById(gridId);\r\n        });\r\n    }\r\n\r\n    createGridProductRow()\r\n    {\r\n        const newId = Text.getRandom();\r\n        // const originalTemplate = this.redefineTemplateEditData(newId);\r\n\r\n        const grid = this.getGrid();\r\n        let newRow;\r\n        if (this.getSettingValue('newRowPosition') === 'bottom')\r\n        {\r\n            newRow = grid.appendRowEditor();\r\n        }\r\n        else\r\n        {\r\n            newRow = grid.prependRowEditor();\r\n        }\r\n\r\n        const newNode = newRow.getNode();\r\n\r\n        if (Type.isDomNode(newNode))\r\n        {\r\n            newNode.setAttribute('data-id', newId);\r\n            newRow.makeCountable();\r\n        }\r\n\r\n        // if (originalTemplate)\r\n        // {\r\n        //     this.setOriginalTemplateEditData(originalTemplate);\r\n        // }\r\n\r\n        EventEmitter.emit('Grid::thereEditedRows', []);\r\n\r\n        grid.adjustRows();\r\n        grid.updateCounterDisplayed();\r\n        grid.updateCounterSelected();\r\n\r\n        return newRow;\r\n    }\r\n\r\n    async addProductRow(productId)\r\n    {\r\n        const row = this.createGridProductRow();\r\n        const newId = row.getId();\r\n\r\n        // if (anchorProduct)\r\n        // {\r\n        //     const anchorRowNode = this.getGrid().getRows().getById(anchorProduct.getField('ID'))?.getNode();\r\n        //     if (anchorRowNode)\r\n        //     {\r\n        //         anchorRowNode.parentNode.insertBefore(row.getNode(), anchorRowNode.nextSibling);\r\n        //     }\r\n        // }\r\n\r\n        await this.initializeNewProductRow(newId, productId);\r\n        this.getGrid().bindOnRowEvents();\r\n        return newId;\r\n    }\r\n\r\n    getRowIdPrefix()\r\n    {\r\n        return this.getSettingValue('rowIdPrefix', 'productcard_applications_list');\r\n    }\r\n\r\n    getProductSelector(newId)\r\n    {\r\n        return ProductSelector.getById('crm_grid_' + this.getRowIdPrefix() + newId);\r\n    }\r\n\r\n    reloadGrid(useProductsFromRequest: boolean = true, isInternalChanging: ?boolean = null): void\r\n    {\r\n        if (isInternalChanging === null)\r\n        {\r\n            isInternalChanging = !useProductsFromRequest;\r\n        }\r\n\r\n        this.getGrid().reloadTable(\r\n            'POST',\r\n            {useProductsFromRequest},\r\n            () => EventEmitter.emit(this, 'onGridReloaded')\r\n        );\r\n    }\r\n\r\n    /*\r\n        keep in mind different actions for this handler:\r\n        - native reload by grid actions (columns settings, etc)\t\t- products from request\r\n        - reload by tax/discount settings button\t\t\t\t\t- products from request\t\tthis.reloadGrid(true)\r\n        - rollback\t\t\t\t\t\t\t\t\t\t\t\t\t- products from db\t\t\tthis.reloadGrid(false)\r\n        - reload after SalesCenter order save\t\t\t\t\t\t- products from db\t\t\tthis.reloadGrid(false)\r\n        - reload after save if location had been changed\r\n     */\r\n    handleOnBeforeGridRequest(event)\r\n    {\r\n        const [grid, eventArgs] = event.getCompatData();\r\n\r\n        if (!grid || !grid.parent || grid.parent.getId() !== this.getGridId())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // reload by native grid actions (columns settings, etc), otherwise by this.reloadGrid()\r\n        const isNativeAction = !('useProductsFromRequest' in eventArgs.data);\r\n        const useProductsFromRequest = isNativeAction ? true : eventArgs.data.useProductsFromRequest;\r\n\r\n        eventArgs.url = this.getReloadUrl();\r\n        eventArgs.method = 'POST';\r\n        eventArgs.sessid = BX.bitrix_sessid();\r\n        eventArgs.data = {\r\n            ...eventArgs.data,\r\n            signedParameters: this.getSignedParameters(),\r\n            products: useProductsFromRequest ? this.getProductsFields() : null,\r\n            // locationId: this.getLocationId(),\r\n            // currencyId: this.getCurrencyId(),\r\n        };\r\n    }\r\n\r\n    getReloadUrl()\r\n    {\r\n        return this.getSettingValue('reloadUrl', '');\r\n    }\r\n\r\n    getComponentName()\r\n    {\r\n       return this.getSettingValue('componentName', 'kitconsulting:catalog.productcard.applications');\r\n    }\r\n\r\n    getSignedParameters()\r\n    {\r\n        return this.getSettingValue('signedParameters', '');\r\n    }\r\n\r\n    async initializeNewProductRow(newId, productId)\r\n    {\r\n        // if (Type.isNil(fields))\r\n        // {\r\n        //     fields = {\r\n        //         ...this.getSettingValue('templateItemFields', {}),\r\n        //         ...{\r\n        //             CURRENCY: this.getCurrencyId()\r\n        //         }\r\n        //     };\r\n        //\r\n        // }\r\n\r\n\r\n        let productFields = await this.fetchProduct(productId);\r\n        let fields = {\r\n            ID: newId,\r\n            PRODUCT_ID: productId,\r\n            NAME: productFields['NAME']\r\n        };\r\n\r\n        const rowId = this.getRowIdPrefix() + newId;\r\n        // fields.ID = newId;\r\n\r\n        const productRow = new Row(rowId, fields, this);\r\n\r\n        if (this.getSettingValue('newRowPosition') === 'bottom')\r\n        {\r\n            this.products.push(productRow);\r\n        }\r\n        else\r\n        {\r\n            this.products.unshift(productRow);\r\n        }\r\n\r\n        return productRow;\r\n    }\r\n\r\n    getProductsFields()\r\n    {\r\n        const productFields = [];\r\n\r\n        for (const item of this.products)\r\n        {\r\n            productFields.push(item.getFields());\r\n        }\r\n\r\n        return productFields;\r\n    }\r\n\r\n    async fetchProduct(product_id) {\r\n        let componentName = this.getComponentName();\r\n        let result = await BX.ajax.runComponentAction(componentName, 'getProduct', {\r\n            mode: 'ajax',\r\n            signedParameters: this.getSignedParameters(),\r\n            data: {\r\n                product_id: product_id\r\n            }\r\n        });\r\n\r\n        return result.data;\r\n    }\r\n\r\n    deleteRow(rowId: string, skipActions: boolean = false): void\r\n    {\r\n        if (!Type.isStringFilled(rowId))\r\n        {\r\n            return;\r\n        }\r\n\r\n        const gridRow = this.getGrid().getRows().getById(rowId);\r\n        if (gridRow)\r\n        {\r\n            Dom.remove(gridRow.getNode());\r\n            this.getGrid().getRows().reset();\r\n        }\r\n\r\n        const productRow = this.getProductById(rowId);\r\n        if (productRow)\r\n        {\r\n            const index = this.products.indexOf(productRow);\r\n            if (index > -1)\r\n            {\r\n                this.products.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        EventEmitter.emit('Grid::thereEditedRows', []);\r\n    }\r\n\r\n    getProductById(id: string): ?Row\r\n    {\r\n        const rowId = this.getRowIdPrefix() + id;\r\n\r\n        return this.getProductByRowId(rowId);\r\n    }\r\n\r\n    getProductByRowId(rowId: string): ?Row\r\n    {\r\n        return this.products.find((row: Row) => {\r\n            return row.getId() === rowId;\r\n        });\r\n    }\r\n\r\n    handleOnSave(event: BaseEvent)\r\n    {\r\n        const items = [];\r\n\r\n        this.products.forEach((product) => {\r\n            const item = {\r\n                fields: {...product.fields},\r\n                rowId: product.fields.ROW_ID\r\n            };\r\n            items.push(item);\r\n        });\r\n\r\n        this.setSettingValue('items', items);\r\n    }\r\n\r\n    handleOnEntityUpdate(event: BaseEvent)\r\n    {\r\n        const [data] = event.getData();\r\n        if (true\r\n            // this.isChanged()\r\n            // && data.entityId === this.getSettingValue('entityId')\r\n            // && data.entityTypeId === this.getSettingValue('entityTypeId')\r\n        )\r\n        {\r\n            ajax.runComponentAction(\r\n                this.getComponentName(),\r\n                'saveApplications',\r\n                {\r\n                    mode: 'ajax',\r\n                    signedParameters: this.getSignedParameters(),\r\n                    data: {\r\n                        rows: this.getProductsFields()\r\n                    }\r\n                }\r\n            ).then(response => {\r\n                // this.setGridChanged(false);\r\n                this.reloadGrid(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorSubmit(event: BaseEvent)\r\n    {\r\n        if (!this.isLocationDependantTaxesEnabled())\r\n        {\r\n            return;\r\n        }\r\n        const entityData = event.getData()[0];\r\n        if (!entityData || !entityData.hasOwnProperty('LOCATION_ID'))\r\n        {\r\n            return;\r\n        }\r\n        if (entityData['LOCATION_ID'] !== this.getLocationId())\r\n        {\r\n            this.setLocationId(entityData['LOCATION_ID']);\r\n            this.reloadGrid(false);\r\n        }\r\n    }\r\n}\r\n","import {ajax, Cache, Dom, Event, Loc, Reflection, Runtime, Tag, Text, Type} from 'main.core';\nimport {Editor} from './productcard.applications.editor';\nimport 'ui.hint';\nimport 'ui.notification';\nimport {ProductModel} from \"catalog.product-model\";\nimport {EventEmitter} from \"main.core.events\";\nimport {PopupMenu} from \"main.popup\";\nimport {ProductSelector} from \"catalog.product-selector\";\n\nexport class Row {\n\n    id: ?string;\n    editor: ?Editor;\n    // model: ?ProductModel;\n    // mainSelector: ?ProductSelector;\n    fields: Object = {};\n\n    // handleFocusUnchangeablePrice = this.#showChangePriceNotify.bind(this);\n    // handleChangeStoreData = this.#onChangeStoreData.bind(this);\n    // handleProductErrorsChange = Runtime.debounce(this.#onProductErrorsChange, 500, this);\n    // handleMainSelectorClear = Runtime.debounce(this.#onMainSelectorClear.bind(this), 500, this);\n    // // handleMainSelectorChange = Runtime.debounce(this.#onMainSelectorChange.bind(this), 500, this);\n    // handleMainSelectorChange = this.#onMainSelectorChange.bind(this);\n    // handleStoreFieldChange = Runtime.debounce(this.#onStoreFieldChange.bind(this), 500, this);\n    // handleStoreFieldClear = Runtime.debounce(this.#onStoreFieldClear.bind(this), 500, this);\n    // handleOnGridUpdated = this.#onGridUpdated.bind(this);\n\n    cache = new Cache.MemoryCache();\n\n    constructor(id, fields, editor) {\n        this.setId(id);\n        // this.setSettings(settings);\n        this.setEditor(editor);\n        // this.setModel(fields, settings);\n        this.setFields(fields);\n        this.#initActions();\n        // // this.#initSelector();\n        // // this.#initStoreSelector();\n        // // this.#initStoreAvailablePopup();\n        // // this.#initReservedControl();\n        // this.modifyBasePriceInput();\n        this.refreshFieldsLayout();\n        //\n        // requestAnimationFrame(this.initHandlers.bind(this));\n    }\n\n    setFields(fields) {\n        this.fields = fields;\n    }\n\n    getFields() {\n        return this.fields;\n    }\n\n    setEditor(editor) {\n        this.editor = editor;\n    }\n\n    getEditor() {\n        return this.editor;\n    }\n\n    setId(id) {\n        this.id = id;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    #initActions()\n    {\n        const actionCellContentContainer = this.getNode().querySelector('.main-grid-cell-action .main-grid-cell-content');\n        if (Type.isDomNode(actionCellContentContainer))\n        {\n            const actionsButton = Tag.render`\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclass=\"main-grid-row-action-button\"\n\t\t\t\t></a>\n\t\t\t`;\n\n            Event.bind(actionsButton, 'click', (event) => {\n                const menuItems = [\n                    {\n                        text: Loc.getMessage('ROW_ACTION_REMOVE'),\n                        onclick: this.handleDeleteAction.bind(this),\n                    }\n                ];\n\n                PopupMenu.show({\n                    id: this.getId() + '_actions_popup',\n                    bindElement: actionsButton,\n                    items: menuItems,\n                    cacheable: false,\n                });\n\n                event.preventDefault();\n                event.stopPropagation();\n            });\n\n            Dom.append(actionsButton, actionCellContentContainer);\n        }\n    }\n\n    handleDeleteAction(event, menuItem)\n    {\n        this.getEditor()?.deleteRow(this.getField('ID'));\n\n        const menu = menuItem.getMenuWindow();\n        if (menu)\n        {\n            menu.destroy();\n        }\n    }\n\n    refreshFieldsLayout(): void\n    {\n        for (const field in this.fields)\n        {\n            this.updateUiField(field, this.fields[field]);\n        }\n    }\n\n    updateUiField(name, value)\n    {\n        const item = this.getInputByFieldName(name);\n\n        if (Type.isElementNode(item))\n        {\n            item.textContent = value;\n        }\n    }\n\n    // controls\n    getInputByFieldName(fieldName: string): ?HTMLElement\n    {\n        return this.getNode().querySelector('[data-field=\"' + fieldName + '\"]');\n    }\n\n    getNode(): ?HTMLElement\n    {\n        return this.cache.remember('node', () => {\n            const rowId = this.getField('ID', 0);\n\n            return this.getEditorContainer().querySelector('[data-id=\"' + rowId + '\"]');\n        });\n    }\n\n    getEditorContainer(): HTMLElement\n    {\n        return this.getEditor().getContainer();\n    }\n\n    getField(name: string, defaultValue)\n    {\n        return this.fields.hasOwnProperty(name) ? this.fields[name] : defaultValue;\n    }\n}"],"names":["PageEventsManager","settings","_settings","eventHandlers","eventName","eventHandler","push","BX","addCustomEvent","eventParams","onCustomEvent","i","length","removeCustomEvent","Editor","id","handleProductSelectionPopup","bind","handleOnDialogSelectProduct","handleOnBeforeGridRequest","handleOnSave","handleOnEntityUpdate","handleEditorSubmit","Cache","MemoryCache","setId","products","config","setSettings","initProducts","subscribeDomEvents","subscribeCustomEvents","name","defaultValue","hasOwnProperty","value","list","getSettingValue","item","fields","console","log","Row","rowId","unsubscribeDomEvents","container","getContainer","Type","isElementNode","querySelectorAll","forEach","selectButton","Event","productSelectionPopupHandler","unbind","unsubscribeCustomEvents","EventEmitter","subscribe","onDialogSelectProductHandler","onEntityUpdateHandler","onBeforeGridRequestHandler","unsubscribe","event","getCompatData","productId","getRowByProductId","addProductRow","result","filter","elem","getField","caller","jsEventsManagerId","popup","CDialog","content_url","util","urlencode","bitrix_sessid","height","Math","max","window","innerHeight","width","innerWidth","draggable","resizable","min_height","min_width","zIndex","subscribeOnce","defer","Get","style","position","top","parseInt","GetWindowScrollPos","scrollTop","OVERLAY","Close","isUndefined","Crm","EntityEvent","names","update","requestAnimationFrame","Show","document","getElementById","getContainerId","componentId","pageEventsManager","initPageEventsManager","cache","remember","gridId","getGridId","Reflection","getClass","Error","Main","gridManager","getInstanceById","newId","Text","getRandom","grid","getGrid","newRow","appendRowEditor","prependRowEditor","newNode","getNode","isDomNode","setAttribute","makeCountable","emit","adjustRows","updateCounterDisplayed","updateCounterSelected","row","createGridProductRow","getId","initializeNewProductRow","bindOnRowEvents","ProductSelector","getById","getRowIdPrefix","useProductsFromRequest","reloadTable","eventArgs","parent","isNativeAction","data","url","getReloadUrl","method","sessid","signedParameters","getSignedParameters","getProductsFields","fetchProduct","productFields","ID","PRODUCT_ID","NAME","productRow","unshift","getFields","product_id","componentName","getComponentName","ajax","runComponentAction","mode","isStringFilled","gridRow","getRows","Dom","remove","reset","getProductById","index","indexOf","splice","getProductByRowId","find","items","product","ROW_ID","setSettingValue","getData","rows","then","response","reloadGrid","isLocationDependantTaxesEnabled","entityData","getLocationId","setLocationId","editor","setEditor","setFields","refreshFieldsLayout","menuItem","getEditor","deleteRow","menu","getMenuWindow","destroy","field","updateUiField","getInputByFieldName","textContent","fieldName","querySelector","getEditorContainer","actionCellContentContainer","actionsButton","Tag","render","menuItems","text","Loc","getMessage","onclick","handleDeleteAction","PopupMenu","show","bindElement","cacheable","preventDefault","stopPropagation","append"],"mappings":"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"}